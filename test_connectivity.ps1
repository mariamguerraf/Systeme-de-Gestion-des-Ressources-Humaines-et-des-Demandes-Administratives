#!/usr/bin/env powershell
# Script de test de connectivit√© backend/frontend

Write-Host "üîç Test de connectivit√© Backend/Frontend" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Test 1: V√©rifier si le port 8000 est occup√©
Write-Host "üìç Test 1: Port 8000..." -ForegroundColor Yellow
$port8000 = Get-NetTCPConnection -LocalPort 8000 -ErrorAction SilentlyContinue
if ($port8000) {
    Write-Host "‚úÖ Port 8000 est occup√© (backend probablement actif)" -ForegroundColor Green
    
    # Test 2: Test de l'endpoint /health
    Write-Host "üìç Test 2: Endpoint /health..." -ForegroundColor Yellow
    try {
        $healthResponse = Invoke-WebRequest -Uri "http://127.0.0.1:8000/health" -Method GET -TimeoutSec 5
        if ($healthResponse.StatusCode -eq 200) {
            Write-Host "‚úÖ Backend r√©pond correctement" -ForegroundColor Green
            $content = $healthResponse.Content | ConvertFrom-Json
            Write-Host "   R√©ponse: $($content.message)" -ForegroundColor Gray
        }
    } catch {
        Write-Host "‚ùå Backend ne r√©pond pas sur /health" -ForegroundColor Red
        Write-Host "   Erreur: $($_.Exception.Message)" -ForegroundColor Red
    }
    
    # Test 3: Test de l'endpoint /test
    Write-Host "üìç Test 3: Endpoint /test..." -ForegroundColor Yellow
    try {
        $testResponse = Invoke-WebRequest -Uri "http://127.0.0.1:8000/test" -Method GET -TimeoutSec 5
        if ($testResponse.StatusCode -eq 200) {
            Write-Host "‚úÖ Endpoint /test fonctionne" -ForegroundColor Green
            $content = $testResponse.Content | ConvertFrom-Json
            Write-Host "   Test: $($content.test), CORS: $($content.cors)" -ForegroundColor Gray
        }
    } catch {
        Write-Host "‚ùå Endpoint /test ne r√©pond pas" -ForegroundColor Red
        Write-Host "   Erreur: $($_.Exception.Message)" -ForegroundColor Red
    }
    
} else {
    Write-Host "‚ùå Port 8000 n'est pas occup√© (backend probablement arr√™t√©)" -ForegroundColor Red
    Write-Host "   D√©marrez le backend avec: ./back_end/start_backend.bat" -ForegroundColor Yellow
}

# Test 4: V√©rifier si le port 5173 est occup√© (Vite)
Write-Host "üìç Test 4: Port 5173 (Frontend)..." -ForegroundColor Yellow
$port5173 = Get-NetTCPConnection -LocalPort 5173 -ErrorAction SilentlyContinue
if ($port5173) {
    Write-Host "‚úÖ Port 5173 est occup√© (frontend probablement actif)" -ForegroundColor Green
} else {
    Write-Host "‚ùå Port 5173 n'est pas occup√© (frontend probablement arr√™t√©)" -ForegroundColor Red
    Write-Host "   D√©marrez le frontend avec: ./start_frontend.bat" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìù R√âSUM√â DES √âTAPES:" -ForegroundColor Cyan
Write-Host "1. D√©marrer le backend: ./back_end/start_backend.bat" -ForegroundColor White
Write-Host "2. D√©marrer le frontend: ./start_frontend.bat" -ForegroundColor White
Write-Host "3. Ouvrir http://localhost:5173 dans le navigateur" -ForegroundColor White
Write-Host "4. Se connecter avec admin/admin" -ForegroundColor White
Write-Host ""
